# -*- coding: utf-8 -*-
"""EDA and Feature Engineering Day-01.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Li03jW7gD0ZZ4b595DkntiGi6hTX-xsf
"""

from google.colab import drive
drive.mount('/content/drive')

# Commented out IPython magic to ensure Python compatibility.
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
# %matplotlib inline

df = pd.read_csv('/content/drive/MyDrive/EDA with Features Engineering (Kris Naik)/Zomatodataset/zomato.csv',encoding='latin-1')

df.head()

df.columns

df.info()

df.describe()



"""# In data Analysis What All things We Do
1. Missing Values
2. Explore About the numerical Variables
3. Explore About Categorical Variables
4. Finding Relationship between features
"""

# finding missing value
df.isnull().sum()

[features for features in df.columns if df[features].isnull().sum()>0]

sns.heatmap(df.isnull(),yticklabels=False,cbar=False,cmap='viridis')

df.shape

df_country = pd.read_excel('/content/drive/MyDrive/EDA with Features Engineering (Kris Naik)/Zomatodataset/Country-Code.xlsx')

df_country.head()

final_df = pd.merge(df, df_country, on='Country Code', how='left')

final_df.head()

#To-check Data Types
final_df.dtypes

final_df.columns

country_name = final_df.Country.value_counts().index

country_name

country_val = final_df.Country.value_counts().values
country_val

## Pie Chart top 3 countries that uses zomato
 
plt.pie(country_val[:3], labels=country_name[:3], autopct='%1.2f%%')

#observation : Zomato's maximum orders from india, after that USA, and then UK

final_df.columns

ratings = final_df.groupby(['Aggregate rating','Rating color', 'Rating text']).size().reset_index().rename(columns={0:'Rating Count'})

ratings

## Observation - Maximum users given 0 ratings. 
#1 When ratings between 4.5 annd 4.9 ------> Excellent
#2 when ratings between 4.0 to 4.4 ---------> Very Good
# when Ratings between 3.5 to 3.9 ----------> Good
# when Ratings between 2.5 to 2.9 ----------> Average
# when Ratings between 2.0  to 2.4 ----------> Poor

import matplotlib.pyplot as plt
plt.rcParams['figure.figsize'] = (12,6)
sns.barplot(x='Aggregate rating',y='Rating Count', hue='Rating color', data = ratings, palette=['white','red','orange','yellow','green'])

# Observation: 
# 1 Not Rated count is very high
# 2 Maximum number of ratings are between 2.5 to 3.4

## Count Plot

sns.countplot(x='Rating color',data=ratings, palette=['blue','red','orange','yellow','green', 'cyan'])

## Find the countries name that has given 0 ratings

final_df[final_df['Rating color']=='White'].groupby('Country').size().reset_index()

final_df.groupby(['Aggregate rating','Country']).size().reset_index().head(5)



"""# Observation
1. Maximum number of 0 ratings are from Indian Customers
"""

## Find out which currency is used by which country?

final_df.columns

final_df[['Country','Currency']].groupby(['Country','Currency']).size().reset_index()

## Which countries do have online delivery option

final_df[final_df['Has Online delivery']=='Yes'].Country.value_counts()

final_df[[ 'Has Online delivery', 'Country']].groupby(['Has Online delivery', 'Country']).size().reset_index()



"""# Observation
1. Online delivary is available in India and UAE
"""

# create a pie chart for cities distributions

final_df.City.value_counts().index

city_values = final_df.City.value_counts().values
city_labels = final_df.City.value_counts().index

plt.pie(city_values[:5], labels=city_labels[:5], autopct='%1.2f%%')

# Assignments
#Find the top 10 cuisins

